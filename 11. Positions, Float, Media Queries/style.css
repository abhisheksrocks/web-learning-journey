/*
  ::before and ::after pseudo elements

  pseudo elements are basically used to put elements(for styling)
  before, after or within another element. They not meant to put
  meaningful content, but are more-or-less aimed towards styling of
  the main element.

  for both ::before and ::after pseudo elements, 'content' field is
  mandatory.

  ! <img> DOESN'T SUPPORT ::after or ::before as this element is the
  ! content. However, there is a way to get around this. Just wrap it
  ! inside a div, and use the pseudo elements with that(see below)
*/

p {
  background-color: aquamarine;
}

p::before {
  content: "p::before";
  background-color: blueviolet;
  display: block;
}

p::after {
  content: "p::after";
  background-color: blueviolet;
  display: block;
}

#img1 {
  padding: 10px 10px;
  background-color: brown;
}

/*
  As you can see, ::before and ::after doesn't work
  with <img>
*/

#img1::before {
  content: "img::before";
}

#img1::after {
  content: "img::after";
}

div {
  width: 100px;
  margin: 0 auto;
  position: relative;
}

div::before {
  content: ""; /* Mandatory field*/

  /* This 'absolute' considers 'div' as its parent */
  position: absolute;

  top: -20px;
  left: -20px;

  border: 2px solid #585858;

  width: 100%;
  height: 100%;
  z-index: -2;
}

div::after {
  content: ""; /* Mandatory field*/

  /* This 'absolute' considers 'div' as its parent */
  position: absolute;

  top: -10px;
  left: -10px;

  background-color: rgb(123, 123, 123);

  width: 100%;
  height: 100%;
  z-index: -1;
}

#img2 {
  /*
    ? Why 'display: block'? Here's why:-
    * https://stackoverflow.com/questions/5804256/image-inside-div-has-extra-space-below-the-image

    By default, an image is rendered inline, like a letter so it
    sits on the same line that a, b, c and d sit on.
    There is space below that line for the descenders you find on
    letters like g, j, p and q.
  */
  display: block;
  width: 100%;
  height: 100%;
}
